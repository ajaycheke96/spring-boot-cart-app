# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysqllink  # DNS name
  labels:
    app: mysqllink
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:       # mysql Pod Should contain same labels
    app: mysqllink
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant
---
# Configure 'Deployment' of mysql server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysqllink
  labels:
    app: mysqllink
    tier: database
spec:
  selector: # mysql Pod Should contain same labels
    matchLabels:
      app: mysqllink
      tier: database
  strategy:
    type: Recreate
  template:
    metadata:
      labels: # Must match 'Service' and 'Deployment' selectors
        app: mysqllink
        tier: database
    spec:
      containers:
      - name: mysqllink
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: masterdb
        - name: MYSQL_USER
          value: diamond
        - name: MYSQL_PASSWORD
          value: da123
        ports:
        - containerPort: 3306
          hostPort: 3306
          name: mysqllink
        volumeMounts:
        - name: mysql-persistance-storage
          mountPath: /data/db
      volumes:
      - name: mysql-persistance-storage
        hostPath:
          path: /tmp/dbbackup

---
# For Spring Boot
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart-controller
  labels:
    app: cart-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cart-api
  template:
    metadata:
      labels:
        app: cart-api
    spec:
      containers:
      - name: cart-api
        image: ajaycheke96/cart-api:latest
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: cart-api
  labels:
    app: cart-api
spec:
  ports:
  - nodePort: 30169
    port: 8080
    targetPort: 8080
  selector:
    app: cart-api
  type: NodePort